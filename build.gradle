buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.

def username = "${mod_name}"
if (project.hasProperty('dev_mail')) {
    username = "${dev_mail}"
}
else if(project.hasProperty('dev_username')) {
    username = "${dev_username}"
}

version = "${project.mc_version}-${project.mod_version}"
group= project.base_package // http://maven.apache.org/guides/mini/guide-naming-conventions.html
//noinspection GroovyUnusedAssignment
archivesBaseName = project.mod_name

sourceCompatibility = targetCompatibility = project.jvm_version // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = project.jvm_version
}

repositories {
    maven {
        //JEI files
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "http://modmaven.k-4u.nl"
    }

    maven {
        //fallback for almost everything, this is CurseForge :P
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }

//    maven {
//        name = "Lucky Blocks"
//        url = "http://www.minecraftascending.com/projects/lucky_block/download/version/files/"
//    }
}

minecraft {
    version = "${project.mc_version}-${project.forge_version}"
    if(file('../run').exists()) {
		runDir = "../run"
	}
	else
	{
		runDir = "run"
	}
    
    mappings = project.forge_mappings
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
	
	replace "@VERSION@", project.mod_version
    replaceIn "Reference.java"

    //auto-configure the run arguments
    clientRunArgs += "--username=${username}"
    if(project.hasProperty('dev_password')) {
        clientRunArgs += " --password=${dev_password}"
    }
    serverRunArgs += "nogui"
}

dependencies {

	//everything in /libs/*
	compile fileTree(dir: '${project.lib_location}', include: '*.jar', exclude: '*-sources.jar')

    compile "craftdev-core:craftdev-core:${project.mc_version}:${project.core_version}"

    // compile against the JEI API
    deobfCompile "mezz.jei:jei_${project.mc_version}:${project.jei_version}:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${project.mc_version}:${project.jei_version}"

    //powerful spectrite armor
    runtime "spectrite-mod:spectritemod:${project.spectrite_version}:${project.mc_version}"

    //shulker armor + bow
    runtime "shulker-armor:shulkerarmor:${project.shulker_armor_version}"

    //hammers
    runtime "sparks-hammers:sparkshammers:${project.mc_version}:${project.hammerz_version}"

    //op tools
    runtime "rubytools:rubytools:${project.ruby_version}"

    //OP weapons
    runtime "infused-weaponry:iweap:${project.iweap_version}"

    //lucky blocks
    //unimplemented, get it yourself!

}

jar {

    manifest {
        attributes 'FMLAT': "${project.mod_name}_at.cfg"
    }
}

sourceSets {
	
	main {
		java {
			srcDir 'src/main/java'
		}
		resources {
			srcDir 'resources'
		}
	}
}

task apiJar(type: Jar) {
    from sourceSets.main.allSource
    from sourceSets.main.output
    include 'mod/upcraftlp/playerluckyblocks/API/**/*'
    classifier = 'api'
}

tasks.build.dependsOn apiJar

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    //ATs
    rename '(.+_at.cfg)', 'META-INF/$1'
}
