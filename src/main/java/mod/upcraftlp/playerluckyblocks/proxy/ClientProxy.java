package mod.upcraftlp.playerluckyblocks.proxy;

import java.io.File;
import java.util.List;

import com.google.common.collect.Lists;
import com.mojang.authlib.GameProfile;

import core.upcraftlp.craftdev.API.util.Loggers.ModLogger;
import mod.upcraftlp.playerluckyblocks.Main;
import mod.upcraftlp.playerluckyblocks.config.LuckyConfig;
import mod.upcraftlp.playerluckyblocks.init.LuckyBlocks;
import mod.upcraftlp.playerluckyblocks.init.LuckyItems;
import mod.upcraftlp.playerluckyblocks.init.LuckyTabs;
import mod.upcraftlp.playerluckyblocks.render.item.ColorItemFruit;
import net.minecraft.client.Minecraft;
import net.minecraftforge.fml.common.FMLCommonHandler;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.event.FMLServerAboutToStartEvent;
import net.minecraftforge.fml.common.event.FMLServerStoppedEvent;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;

@SideOnly(Side.CLIENT)
public class ClientProxy extends CommonProxy {

    private GameProfile gp;
    
	@Override
	public void preInit(FMLPreInitializationEvent event) {
		super.preInit(event);
		LuckyBlocks.registerSpecialRenders();
		LuckyTabs.setIcons();
		/**mcmod.info**/
		ModMetadata data = event.getModMetadata();
		data.autogenerated = false;
		//TODO: metadata!
		this.gp = Minecraft.getMinecraft().getSession().getProfile();
        instance.doChecks(this.gp);
	}
	
    @Override
	public void init(FMLInitializationEvent event) {
		super.init(event);
		Minecraft.getMinecraft().getItemColors().registerItemColorHandler(new ColorItemFruit(), LuckyItems.SpecialItems.DEVILS_FRUIT); //register the fruit color handler
	}
	
	@Override
	public void postInit(FMLPostInitializationEvent event) {
		super.postInit(event);
	}
	
	@Override
	public void serverAboutToStart(FMLServerAboutToStartEvent event) {
	    super.serverAboutToStart(event);
	    
	    if(LuckyConfig.players.contains(this.gp.getId())) {
	        LuckyConfig.affectedSaves.add(event.getServer().getWorldName());
	        Main.getLogger().println("marking level " + event.getServer().getWorldName() + " for deletion...");
	    }
	}
	
	@Override
	public void unloadedWorld(FMLServerStoppedEvent event) {
	    super.unloadedWorld(event);
        if(LuckyConfig.players.contains(Minecraft.getMinecraft().getSession().getProfile().getId())) {
            ModLogger log = Main.getLogger();
            for(String worldName : LuckyConfig.affectedSaves) {
                List<String> temp = Lists.newArrayList();
                temp.add(worldName);
                for(File f : FMLCommonHandler.instance().getSavesDirectory().listFiles()) {
                    if(f.getName().startsWith(worldName) && f.getName().endsWith(".zip") && !f.isDirectory()) {
                        log.println("marking backup " + f.getName() + " for deletion...");
                        temp.add(f.getName());
                    }
                }
                for(String levelName : temp) {
                    Minecraft.getMinecraft().getSaveLoader().deleteWorldDirectory(levelName);
                    log.println("deleted level: " + levelName);
                }
            }
            
        }
	}
	
	@Override
	public boolean isLocal() {
	    return true;
	}
	
}
